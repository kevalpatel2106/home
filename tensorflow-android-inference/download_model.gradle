/*
 * download-models.gradle
 *     Downloads model files from ${MODEL_URL} into application's asset folder
 * Input:
 *     TMP_DIR: absolute path to hold downloaded zip files
 *     ASSET_DIR: absolute path to save unzipped model files
 * Output:
 *     3 model files will be downloaded into given folder of ext.ASSET_DIR
 */
// import DownloadModels task
def ASSET_DIR = projectDir.toString() + '/assets'
def TMP_DIR = projectDir.toString() + '/build/download/'

// hard coded model files
// LINT.IfChange
def models = ['inception5h.zip']
// LINT.ThenChange(//tensorflow/examples/android/BUILD)

// Root URL for model archives
def MODEL_URL = 'https://storage.googleapis.com/download.tensorflow.org/models'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'de.undercouch:gradle-download-task:3.2.0'
    }
}

import de.undercouch.gradle.tasks.download.Download

task downloadFile(type: Download) {
    for (f in models) {
        src "${MODEL_URL}/" + f
    }

    File downloadDir = new File(TMP_DIR)
    if (!downloadDir.exists()) downloadDir.mkdirs()

    dest new File(TMP_DIR)
    overwrite true
}

task extractModels(type: Copy) {
    for (f in models) {
        from zipTree(TMP_DIR + '/' + f)
    }

    into file(ASSET_DIR)
    fileMode 0644
    exclude '**/LICENSE'

    def needDownload = false
    for (f in models) {
        if (!(new File(TMP_DIR + '/' + f)).exists()) {
            needDownload = true
        }
    }

    if (needDownload) {
        dependsOn downloadFile
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == 'bundleDebug') {
        task.dependsOn 'extractModels'
    }
    if (task.name == 'bundleRelease') {
        task.dependsOn 'extractModels'
    }
}